{"version":3,"sources":["js/chart.js"],"names":["dayUseWrap","document","querySelector","history","getData","fetch","response","json","data","length","labels","values","averageVal","sum","i","push","date","price","Chart","getElementById","datasets","type","label","backgroundColor","borderColor","options","legend","display","title","text","insertTxt","totalPrice","daySpend","createElement","classList","add","liHistory","historyItem","historyPrice","textContent","item","appendChild"],"mappings":"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","file":"chart.a14d0a43.js","sourceRoot":"..","sourcesContent":["// day-money\nconst dayUseWrap = document.querySelector('.day-use__wrap')\nconst history = document.querySelector('.history')\n\ngetData()\n\nasync function getData() {\n  const response = await fetch('https://eulsoo.github.io/list.json')\n  // console.log(response)\n  const data = await response.json()\n  // console.log(data)\n  length = data.length\n  // console.log(length)\n\n  labels = []\n  values = []\n  averageVal = []\n  sum = 0\n  for (i = 0; i < length; i++) {\n    labels.push(data[i].date)\n    values.push(data[i].price)\n    averageVal.push((sum = sum + data[i].price) / length)\n  }\n\n  // Daily-canvas\n  new Chart(document.getElementById('daily-canvas'), {\n    data: {\n      labels: labels,\n      datasets: [\n        {\n          type: 'line',\n          label: '평균 지출',\n          backgroundColor: ['#CD5C5C'],\n          data: averageVal,\n          borderColor: ['#CD5C5C'],\n        },\n        {\n          type: 'bar',\n          label: '일간리포트',\n          backgroundColor: ['#3cba9f'],\n          data: values,\n        },\n      ],\n    },\n\n    options: {\n      legend: { display: false },\n      title: {\n        display: true,\n        text: '원',\n      },\n    },\n  })\n\n  // Month-canvas\n  new Chart(document.getElementById('month-canvas'), {\n    type: 'doughnut',\n    data: {\n      labels: labels,\n      datasets: [\n        {\n          label: '6월 지출 패턴',\n          backgroundColor: [\n            '#3e95cd',\n            '#8e5ea2',\n            '#3cba9f',\n            '#e8c3b9',\n            '#c45850',\n            '#CD5C5C',\n            '#40E0D0',\n          ],\n          data: values,\n        },\n      ],\n    },\n    options: {\n      legend: { display: false },\n      title: {\n        display: true,\n        text: '원',\n      },\n    },\n  })\n\n  insertTxt(data)\n}\n\n/* \n  insrertTxt \n\n  1. data를 받아온다\n  2. 날짜를 비교해서 오늘 / 어제 / 그제 를 나눈다\n  3. 오늘 날짜에 해당하는 item과 price를 textContent로 넣어준다\n*/\n\nfunction insertTxt(data) {\n  // console.log(data[0].date)\n  let totalPrice = 0\n\n  const daySpend = document.createElement('h3')\n  daySpend.classList.add('day-spend')\n\n  for (let i = 0; i < data.length; i++) {\n    const liHistory = document.createElement('li')\n    liHistory.classList.add('history_list')\n    const historyItem = document.createElement('h3')\n    historyItem.classList.add('item')\n    const historyPrice = document.createElement('h3')\n    historyPrice.classList.add('price')\n\n    if (data[i].date === '2021.9.1') {\n      historyItem.textContent = data[i].item\n      historyPrice.textContent = data[i].price\n      totalPrice = totalPrice + data[i].price\n      // console.log(totalPrice)\n\n      liHistory.appendChild(historyItem)\n      liHistory.appendChild(historyPrice)\n      history.appendChild(liHistory)\n    } else if (data[i].date === '2021.9.2') {\n      historyItem.textContent = data[i].item\n      historyPrice.textContent = data[i].price\n      totalPrice = totalPrice + data[i].price\n      liHistory.appendChild(historyItem)\n      liHistory.appendChild(historyPrice)\n      history.appendChild(liHistory)\n    }\n  }\n  daySpend.textContent = `${totalPrice}원 지출`\n  dayUseWrap.appendChild(daySpend)\n}\n"]}